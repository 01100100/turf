{
  "author": {
    "name": "Tom MacWright",
    "email": "tom@macwright.org",
    "url": "http://macwright.org/"
  },
  "name": "simple-statistics",
  "description": "Simple Statistics",
  "version": "0.5.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/tmcw/node-statistics.git"
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": "1.12.x",
    "chai": "1.7.x"
  },
  "optionalDependencies": {},
  "scripts": {
    "test": "mocha -R spec test/spec"
  },
  "main": "src/simple_statistics.js",
  "engines": {
    "node": "*"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/tmcw/simple-statistics.png?branch=master)](http://travis-ci.org/tmcw/simple-statistics)\n\nA project to learn about and make simple reference implementations\nof statistics algorithms.\n\nThis code is designed to work in browsers (including IE)\nas well as in node.js.\n\n## Basic Descriptive Statistics\n\n```javascript\n// Require simple statistics\nvar ss = require('simple-statistics');\n\n// The input is a simple array\nvar list = [1, 2, 3];\n\n// Many different descriptive statistics are supported\nvar sum = ss.sum(list),\n    mean = ss.mean(list),\n    min = ss.min(list),\n    geometric_mean = ss.geometric_mean(list),\n    max = ss.max(list),\n    quantile = ss.quantile(0.25);\n```\n\n## Linear Regression\n\n```javascript\n// For a linear regression, it's a two-dimensional array\nvar data = [ [1, 2], [2, 3] ];\n\n// simple-statistics can produce a linear regression and return\n// a friendly javascript function for the line.\nvar line = ss.linear_regression()\n    .data(data)\n    .line();\n\n// get a point along the line function\nline(0);\n\nvar line = ss.linear_regression()\n\n// Get the r-squared value of the line estimation\nss.r_squared(data, line);\n```\n\n## [Literate Documentation](http://macwright.org/simple-statistics/)\n\n### Mixin Style\n\n_This is **optional** and not used by default. You can opt-in to mixins\nwith `ss.mixin()`._\n\nThis mixes `simple-statistics` methods into the Array prototype - note that\n[extending native objects](http://perfectionkills.com/extending-built-in-native-objects-evil-or-not/) is a\ntricky move.\n\nThis will _only work_ if `defineProperty` is available, which means modern browsers\nand nodejs - on IE8 and below, calling `ss.mixin()` will throw an exception.\n\n```javascript\n// mixin to Array class\nss.mixin();\n\n// The input is a simple array\nvar list = [1, 2, 3];\n\n// The same descriptive techniques as above, but in a simpler style\nvar sum = list.sum(),\n    mean = list.mean(),\n    min = list.min(),\n    max = list.max(),\n    quantile = list.quantile(0.25);\n```\n\n### Bayesian Classifier\n\n```javascript\nvar bayes = ss.bayesian();\nbayes.train({ species: 'Cat' }, 'animal');\nbayes.score({ species: 'Cat' });\n// { animal: 1 }\n```\n\n## Examples\n\n* [Linear regression with simple-statistics and d3js](http://bl.ocks.org/3931800)\n* [Jenks Natural Breaks with a choropleth map with d3js](http://bl.ocks.org/tmcw/4969184)\n\n## Usage\n\nTo use it in browsers, grab [simple_statistics.js](https://raw.github.com/tmcw/simple-statistics/master/src/simple_statistics.js).\nTo use it in node, install it with [npm](https://npmjs.org/) or add it to your package.json.\n\n    npm install simple-statistics\n\nTo use it with [component](https://github.com/component/component),\n\n    component install tmcw/simple-statistics\n\n# [Documentation](https://github.com/tmcw/simple-statistics/blob/master/API.md)\n# [Tests](http://travis-ci.org/#!/tmcw/simple-statistics)\n\n# Contributors\n\n* Tom MacWright\n* [Matt Sacks](https://github.com/mattsacks)\n* Doron Linder\n* [Alexander Sicular](https://github.com/siculars)\n\n## See Also\n\n* [stream-statistics](https://github.com/tmcw/stream-statistics), a sister project that implements\n  many of the same measures for streaming data - as online algorithms\n\n### Javascript\n\n* [science.js](https://github.com/jasondavies/science.js)\n* [atoll.js](https://github.com/nsfmc/atoll.js)\n* [descriptive_statistics](https://github.com/thirtysixthspan/descriptive_statistics)\n* [jStat](http://www.jstat.org/)\n* [classifier](https://github.com/harthur/classifier) is a naive bayesian classifier (though specialized for the words-spam case)\n* [underscore.math](https://github.com/syntagmatic/underscore.math/blob/master/underscore.math.js)\n\n### Python\n\n* [Pandas](http://pandas.pydata.org/)\n* [SciPy](http://www.scipy.org/)\n\n### Their Own Language\n\n* [Julia Language](http://julialang.org/)\n* [R language](http://www.r-project.org/)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/tmcw/node-statistics/issues"
  },
  "_id": "simple-statistics@0.5.0",
  "dist": {
    "shasum": "f690c0f7b8070ebff1d3e2e71c1859245d418ab9"
  },
  "_from": "simple-statistics@",
  "_resolved": "https://registry.npmjs.org/simple-statistics/-/simple-statistics-0.5.0.tgz"
}
