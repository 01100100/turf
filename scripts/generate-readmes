#!/usr/bin/env node

const fs = require('fs-extra');
const glob = require('glob');
const path = require('path');
const load = require('load-json-file');
const documentation = require('documentation');

const packages = glob.sync(path.join(__dirname, '..', 'packages', 'turf-*', 'package.json'));
const postfix = fs.readFileSync(path.join(__dirname, 'postfix.md'), 'utf8');

const paths = {
    GeoJSON: 'http://geojson.org/geojson-spec.html#geojson-objects',
    GeometryCollection: 'http://geojson.org/geojson-spec.html#geometrycollection',
    Point: 'http://geojson.org/geojson-spec.html#point',
    MultiPoint: 'http://geojson.org/geojson-spec.html#multipoint',
    LineString: 'http://geojson.org/geojson-spec.html#linestring',
    MultiLineString: 'http://geojson.org/geojson-spec.html#multilinestring',
    Polygon: 'http://geojson.org/geojson-spec.html#polygon',
    MultiPolygon: 'http://geojson.org/geojson-spec.html#multipolygon',
    Geometry: 'http://geojson.org/geojson-spec.html#geometry',
    Feature: 'http://geojson.org/geojson-spec.html#feature-objects',
    FeatureCollection: 'http://geojson.org/geojson-spec.html#feature-collection-objects'
};

packages.forEach(packagePath => {
    const directory = path.parse(packagePath).dir;
    const indexPath = path.join(directory, 'index.js');
    const pckg = load.sync(packagePath);
    const name = pckg.name;

    // Build Documentation
    documentation.build(indexPath, {shallow: true}).then(res => {
        if (res === undefined) return console.warning(packagePath);
        console.log('Building Docs: ' + name);

        // Format Markdown
        documentation.formats.md(res, {paths}).then(markdown => {
            markdown = `# ${name}\n\n${markdown}${postfix.replace(/{module}/, name)}`;
            fs.writeFileSync(path.join(directory, 'README.md'), markdown);
        }).catch(error => console.warning(error));
    }).catch(error => console.warning(error));
});
